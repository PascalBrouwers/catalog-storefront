<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: catalog.proto

namespace Magento\CatalogStorefrontApi\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>magento.catalogStorefrontApi.proto.Price</code>
 */
class Price extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>float regular = 1;</code>
     */
    protected $regular = 0.0;
    /**
     * Generated from protobuf field <code>repeated .magento.catalogStorefrontApi.proto.Adjustment regular_adjustments = 2;</code>
     */
    private $regular_adjustments;
    /**
     * Generated from protobuf field <code>float final = 3;</code>
     */
    protected $final = 0.0;
    /**
     * Generated from protobuf field <code>repeated .magento.catalogStorefrontApi.proto.Adjustment final_adjustments = 4;</code>
     */
    private $final_adjustments;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type float $regular
     *     @type \Magento\CatalogStorefrontApi\Proto\Adjustment[]|\Google\Protobuf\Internal\RepeatedField $regular_adjustments
     *     @type float $final
     *     @type \Magento\CatalogStorefrontApi\Proto\Adjustment[]|\Google\Protobuf\Internal\RepeatedField $final_adjustments
     * }
     */
    public function __construct($data = null)
    {
        \Magento\CatalogStorefrontApi\Metadata\Catalog::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>float regular = 1;</code>
     * @return float
     */
    public function getRegular()
    {
        return $this->regular;
    }

    /**
     * Generated from protobuf field <code>float regular = 1;</code>
     * @param float $var
     * @return $this
     */
    public function setRegular($var)
    {
        GPBUtil::checkFloat($var);
        $this->regular = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .magento.catalogStorefrontApi.proto.Adjustment regular_adjustments = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRegularAdjustments()
    {
        return $this->regular_adjustments;
    }

    /**
     * Generated from protobuf field <code>repeated .magento.catalogStorefrontApi.proto.Adjustment regular_adjustments = 2;</code>
     * @param \Magento\CatalogStorefrontApi\Proto\Adjustment[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRegularAdjustments($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Magento\CatalogStorefrontApi\Proto\Adjustment::class);
        $this->regular_adjustments = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float final = 3;</code>
     * @return float
     */
    public function getFinal()
    {
        return $this->final;
    }

    /**
     * Generated from protobuf field <code>float final = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setFinal($var)
    {
        GPBUtil::checkFloat($var);
        $this->final = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .magento.catalogStorefrontApi.proto.Adjustment final_adjustments = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFinalAdjustments()
    {
        return $this->final_adjustments;
    }

    /**
     * Generated from protobuf field <code>repeated .magento.catalogStorefrontApi.proto.Adjustment final_adjustments = 4;</code>
     * @param \Magento\CatalogStorefrontApi\Proto\Adjustment[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFinalAdjustments($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Magento\CatalogStorefrontApi\Proto\Adjustment::class);
        $this->final_adjustments = $arr;

        return $this;
    }
}
