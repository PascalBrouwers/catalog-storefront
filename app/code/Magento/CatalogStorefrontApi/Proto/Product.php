<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: catalog.proto

namespace Magento\CatalogStorefrontApi\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>magento.catalogStorefrontApi.proto.Product</code>
 */
class Product extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string entity_id = 1;</code>
     */
    protected $entity_id = '';
    /**
     * Generated from protobuf field <code>string attribute_set_id = 2;</code>
     */
    protected $attribute_set_id = '';
    /**
     * Generated from protobuf field <code>bool has_options = 3;</code>
     */
    protected $has_options = false;
    /**
     * Generated from protobuf field <code>string id = 4;</code>
     */
    protected $id = '';
    /**
     * TODO: has_options most of the fields below are taken from DB?
     * TODO: required_options ?
     * TODO: created_at ?
     * TODO: updated_at ?
     * TODO: row_id ?
     * TODO: created_in ?
     * TODO: updated_in ?
     * TODO: entity_id vs id, id is used in elastic?
     *
     * Generated from protobuf field <code>string sku = 7;</code>
     */
    protected $sku = '';
    /**
     * Generated from protobuf field <code>string type_id = 8;</code>
     */
    protected $type_id = '';
    /**
     * TODO: status vs visibility vs quantity_and_stock_status vs stock_status
     * TODO: status: enabled, disabled. Check why store these records
     *
     * Generated from protobuf field <code>string status = 9;</code>
     */
    protected $status = '';
    /**
     * Generated from protobuf field <code>string stock_status = 10;</code>
     */
    protected $stock_status = '';
    /**
     * Generated from protobuf field <code>string name = 17;</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>string description = 18;</code>
     */
    protected $description = '';
    /**
     * Generated from protobuf field <code>string short_description = 19;</code>
     */
    protected $short_description = '';
    /**
     * Generated from protobuf field <code>string url_key = 20;</code>
     */
    protected $url_key = '';
    /**
     * TODO: qty is missing for only-x-left-in-stock functionality
     * TODO: Why missing meta fields?
     *
     * Generated from protobuf field <code>string meta_description = 22;</code>
     */
    protected $meta_description = '';
    /**
     * Generated from protobuf field <code>string meta_keyword = 23;</code>
     */
    protected $meta_keyword = '';
    /**
     * Generated from protobuf field <code>string meta_title = 24;</code>
     */
    protected $meta_title = '';
    /**
     * Generated from protobuf field <code>string tax_class_id = 28;</code>
     */
    protected $tax_class_id = '';
    /**
     * Generated from protobuf field <code>float weight = 29;</code>
     */
    protected $weight = 0.0;
    /**
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Image image = 31;</code>
     */
    protected $image = null;
    /**
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Image small_image = 32;</code>
     */
    protected $small_image = null;
    /**
     * TODO: Rename to thumbnail_image?
     *
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Image thumbnail = 33;</code>
     */
    protected $thumbnail = null;
    /**
     *    Image swatch_image = 34;//-
     *    repeated Image media_gallery = 35;//-
     * where to display product
     *
     * Generated from protobuf field <code>string visibility = 37;</code>
     */
    protected $visibility = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $entity_id
     *     @type string $attribute_set_id
     *     @type bool $has_options
     *     @type string $id
     *     @type string $sku
     *           TODO: has_options most of the fields below are taken from DB?
     *           TODO: required_options ?
     *           TODO: created_at ?
     *           TODO: updated_at ?
     *           TODO: row_id ?
     *           TODO: created_in ?
     *           TODO: updated_in ?
     *           TODO: entity_id vs id, id is used in elastic?
     *     @type string $type_id
     *     @type string $status
     *           TODO: status vs visibility vs quantity_and_stock_status vs stock_status
     *           TODO: status: enabled, disabled. Check why store these records
     *     @type string $stock_status
     *     @type string $name
     *     @type string $description
     *     @type string $short_description
     *     @type string $url_key
     *     @type string $meta_description
     *           TODO: qty is missing for only-x-left-in-stock functionality
     *           TODO: Why missing meta fields?
     *     @type string $meta_keyword
     *     @type string $meta_title
     *     @type string $tax_class_id
     *     @type float $weight
     *     @type \Magento\CatalogStorefrontApi\Proto\Image $image
     *     @type \Magento\CatalogStorefrontApi\Proto\Image $small_image
     *     @type \Magento\CatalogStorefrontApi\Proto\Image $thumbnail
     *           TODO: Rename to thumbnail_image?
     *     @type string $visibility
     *              Image swatch_image = 34;//-
     *              repeated Image media_gallery = 35;//-
     *           where to display product
     * }
     */
    public function __construct($data = null)
    {
        \Magento\CatalogStorefrontApi\Metadata\Catalog::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string entity_id = 1;</code>
     * @return string
     */
    public function getEntityId()
    {
        return $this->entity_id;
    }

    /**
     * Generated from protobuf field <code>string entity_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setEntityId($var)
    {
        GPBUtil::checkString($var, true);
        $this->entity_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string attribute_set_id = 2;</code>
     * @return string
     */
    public function getAttributeSetId()
    {
        return $this->attribute_set_id;
    }

    /**
     * Generated from protobuf field <code>string attribute_set_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setAttributeSetId($var)
    {
        GPBUtil::checkString($var, true);
        $this->attribute_set_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool has_options = 3;</code>
     * @return bool
     */
    public function getHasOptions()
    {
        return $this->has_options;
    }

    /**
     * Generated from protobuf field <code>bool has_options = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setHasOptions($var)
    {
        GPBUtil::checkBool($var);
        $this->has_options = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string id = 4;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Generated from protobuf field <code>string id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, true);
        $this->id = $var;

        return $this;
    }

    /**
     * TODO: has_options most of the fields below are taken from DB?
     * TODO: required_options ?
     * TODO: created_at ?
     * TODO: updated_at ?
     * TODO: row_id ?
     * TODO: created_in ?
     * TODO: updated_in ?
     * TODO: entity_id vs id, id is used in elastic?
     *
     * Generated from protobuf field <code>string sku = 7;</code>
     * @return string
     */
    public function getSku()
    {
        return $this->sku;
    }

    /**
     * TODO: has_options most of the fields below are taken from DB?
     * TODO: required_options ?
     * TODO: created_at ?
     * TODO: updated_at ?
     * TODO: row_id ?
     * TODO: created_in ?
     * TODO: updated_in ?
     * TODO: entity_id vs id, id is used in elastic?
     *
     * Generated from protobuf field <code>string sku = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setSku($var)
    {
        GPBUtil::checkString($var, true);
        $this->sku = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string type_id = 8;</code>
     * @return string
     */
    public function getTypeId()
    {
        return $this->type_id;
    }

    /**
     * Generated from protobuf field <code>string type_id = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setTypeId($var)
    {
        GPBUtil::checkString($var, true);
        $this->type_id = $var;

        return $this;
    }

    /**
     * TODO: status vs visibility vs quantity_and_stock_status vs stock_status
     * TODO: status: enabled, disabled. Check why store these records
     *
     * Generated from protobuf field <code>string status = 9;</code>
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * TODO: status vs visibility vs quantity_and_stock_status vs stock_status
     * TODO: status: enabled, disabled. Check why store these records
     *
     * Generated from protobuf field <code>string status = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkString($var, true);
        $this->status = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string stock_status = 10;</code>
     * @return string
     */
    public function getStockStatus()
    {
        return $this->stock_status;
    }

    /**
     * Generated from protobuf field <code>string stock_status = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setStockStatus($var)
    {
        GPBUtil::checkString($var, true);
        $this->stock_status = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string name = 17;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 17;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, true);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string description = 18;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Generated from protobuf field <code>string description = 18;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, true);
        $this->description = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string short_description = 19;</code>
     * @return string
     */
    public function getShortDescription()
    {
        return $this->short_description;
    }

    /**
     * Generated from protobuf field <code>string short_description = 19;</code>
     * @param string $var
     * @return $this
     */
    public function setShortDescription($var)
    {
        GPBUtil::checkString($var, true);
        $this->short_description = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string url_key = 20;</code>
     * @return string
     */
    public function getUrlKey()
    {
        return $this->url_key;
    }

    /**
     * Generated from protobuf field <code>string url_key = 20;</code>
     * @param string $var
     * @return $this
     */
    public function setUrlKey($var)
    {
        GPBUtil::checkString($var, true);
        $this->url_key = $var;

        return $this;
    }

    /**
     * TODO: qty is missing for only-x-left-in-stock functionality
     * TODO: Why missing meta fields?
     *
     * Generated from protobuf field <code>string meta_description = 22;</code>
     * @return string
     */
    public function getMetaDescription()
    {
        return $this->meta_description;
    }

    /**
     * TODO: qty is missing for only-x-left-in-stock functionality
     * TODO: Why missing meta fields?
     *
     * Generated from protobuf field <code>string meta_description = 22;</code>
     * @param string $var
     * @return $this
     */
    public function setMetaDescription($var)
    {
        GPBUtil::checkString($var, true);
        $this->meta_description = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string meta_keyword = 23;</code>
     * @return string
     */
    public function getMetaKeyword()
    {
        return $this->meta_keyword;
    }

    /**
     * Generated from protobuf field <code>string meta_keyword = 23;</code>
     * @param string $var
     * @return $this
     */
    public function setMetaKeyword($var)
    {
        GPBUtil::checkString($var, true);
        $this->meta_keyword = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string meta_title = 24;</code>
     * @return string
     */
    public function getMetaTitle()
    {
        return $this->meta_title;
    }

    /**
     * Generated from protobuf field <code>string meta_title = 24;</code>
     * @param string $var
     * @return $this
     */
    public function setMetaTitle($var)
    {
        GPBUtil::checkString($var, true);
        $this->meta_title = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string tax_class_id = 28;</code>
     * @return string
     */
    public function getTaxClassId()
    {
        return $this->tax_class_id;
    }

    /**
     * Generated from protobuf field <code>string tax_class_id = 28;</code>
     * @param string $var
     * @return $this
     */
    public function setTaxClassId($var)
    {
        GPBUtil::checkString($var, true);
        $this->tax_class_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float weight = 29;</code>
     * @return float
     */
    public function getWeight()
    {
        return $this->weight;
    }

    /**
     * Generated from protobuf field <code>float weight = 29;</code>
     * @param float $var
     * @return $this
     */
    public function setWeight($var)
    {
        GPBUtil::checkFloat($var);
        $this->weight = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Image image = 31;</code>
     * @return \Magento\CatalogStorefrontApi\Proto\Image
     */
    public function getImage()
    {
        return $this->image;
    }

    /**
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Image image = 31;</code>
     * @param \Magento\CatalogStorefrontApi\Proto\Image $var
     * @return $this
     */
    public function setImage($var)
    {
        GPBUtil::checkMessage($var, \Magento\CatalogStorefrontApi\Proto\Image::class);
        $this->image = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Image small_image = 32;</code>
     * @return \Magento\CatalogStorefrontApi\Proto\Image
     */
    public function getSmallImage()
    {
        return $this->small_image;
    }

    /**
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Image small_image = 32;</code>
     * @param \Magento\CatalogStorefrontApi\Proto\Image $var
     * @return $this
     */
    public function setSmallImage($var)
    {
        GPBUtil::checkMessage($var, \Magento\CatalogStorefrontApi\Proto\Image::class);
        $this->small_image = $var;

        return $this;
    }

    /**
     * TODO: Rename to thumbnail_image?
     *
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Image thumbnail = 33;</code>
     * @return \Magento\CatalogStorefrontApi\Proto\Image
     */
    public function getThumbnail()
    {
        return $this->thumbnail;
    }

    /**
     * TODO: Rename to thumbnail_image?
     *
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Image thumbnail = 33;</code>
     * @param \Magento\CatalogStorefrontApi\Proto\Image $var
     * @return $this
     */
    public function setThumbnail($var)
    {
        GPBUtil::checkMessage($var, \Magento\CatalogStorefrontApi\Proto\Image::class);
        $this->thumbnail = $var;

        return $this;
    }

    /**
     *    Image swatch_image = 34;//-
     *    repeated Image media_gallery = 35;//-
     * where to display product
     *
     * Generated from protobuf field <code>string visibility = 37;</code>
     * @return string
     */
    public function getVisibility()
    {
        return $this->visibility;
    }

    /**
     *    Image swatch_image = 34;//-
     *    repeated Image media_gallery = 35;//-
     * where to display product
     *
     * Generated from protobuf field <code>string visibility = 37;</code>
     * @param string $var
     * @return $this
     */
    public function setVisibility($var)
    {
        GPBUtil::checkString($var, true);
        $this->visibility = $var;

        return $this;
    }
}
