<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: catalog.proto

namespace Magento\CatalogStorefrontApi\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>magento.catalogStorefrontApi.proto.PriceRange</code>
 */
class PriceRange extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Price minimum_price = 1;</code>
     */
    protected $minimum_price = null;
    /**
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Price maximum_price = 2;</code>
     */
    protected $maximum_price = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Magento\CatalogStorefrontApi\Proto\Price $minimum_price
     *     @type \Magento\CatalogStorefrontApi\Proto\Price $maximum_price
     * }
     */
    public function __construct($data = null)
    {
        \Magento\CatalogStorefrontApi\Metadata\Catalog::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Price minimum_price = 1;</code>
     * @return \Magento\CatalogStorefrontApi\Proto\Price
     */
    public function getMinimumPrice()
    {
        return $this->minimum_price;
    }

    /**
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Price minimum_price = 1;</code>
     * @param \Magento\CatalogStorefrontApi\Proto\Price $var
     * @return $this
     */
    public function setMinimumPrice($var)
    {
        GPBUtil::checkMessage($var, \Magento\CatalogStorefrontApi\Proto\Price::class);
        $this->minimum_price = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Price maximum_price = 2;</code>
     * @return \Magento\CatalogStorefrontApi\Proto\Price
     */
    public function getMaximumPrice()
    {
        return $this->maximum_price;
    }

    /**
     * Generated from protobuf field <code>.magento.catalogStorefrontApi.proto.Price maximum_price = 2;</code>
     * @param \Magento\CatalogStorefrontApi\Proto\Price $var
     * @return $this
     */
    public function setMaximumPrice($var)
    {
        GPBUtil::checkMessage($var, \Magento\CatalogStorefrontApi\Proto\Price::class);
        $this->maximum_price = $var;

        return $this;
    }
}
