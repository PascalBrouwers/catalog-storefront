<?php
# Generated by the Magento PHP proto generator.  DO NOT EDIT!

/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

declare(strict_types=1);

namespace Magento\CatalogStorefrontApi\Api\Data;

final class ConfigurableOptionValue implements ConfigurableOptionValueInterface
{
    /**
     * @var string
     */
    private $valueIndex;
    /**
     * @var string
     */
    private $label;
    /**
     * @var string
     */
    private $defaultLabel;
    /**
     * @var string
     */
    private $storeLabel;
    /**
     * @var string
     */
    private $useDefaultValue;
    /**
     * @var string
     */
    private $attributeId;
    /**
     * @var string
     */
    private $productId;


    /**
     * @return string
     */
    public function getValueIndex(): string
    {
        return (string) $this->valueIndex;
    }
    
    /**
     * @param string $value
     * @return void
     */
    public function setValueIndex(string $value): void
    {
        $this->valueIndex = $value;
    }

    /**
     * @return string
     */
    public function getLabel(): string
    {
        return (string) $this->label;
    }
    
    /**
     * @param string $value
     * @return void
     */
    public function setLabel(string $value): void
    {
        $this->label = $value;
    }

    /**
     * @return string
     */
    public function getDefaultLabel(): string
    {
        return (string) $this->defaultLabel;
    }
    
    /**
     * @param string $value
     * @return void
     */
    public function setDefaultLabel(string $value): void
    {
        $this->defaultLabel = $value;
    }

    /**
     * @return string
     */
    public function getStoreLabel(): string
    {
        return (string) $this->storeLabel;
    }
    
    /**
     * @param string $value
     * @return void
     */
    public function setStoreLabel(string $value): void
    {
        $this->storeLabel = $value;
    }

    /**
     * @return string
     */
    public function getUseDefaultValue(): string
    {
        return (string) $this->useDefaultValue;
    }
    
    /**
     * @param string $value
     * @return void
     */
    public function setUseDefaultValue(string $value): void
    {
        $this->useDefaultValue = $value;
    }

    /**
     * @return string
     */
    public function getAttributeId(): string
    {
        return (string) $this->attributeId;
    }
    
    /**
     * @param string $value
     * @return void
     */
    public function setAttributeId(string $value): void
    {
        $this->attributeId = $value;
    }

    /**
     * @return string
     */
    public function getProductId(): string
    {
        return (string) $this->productId;
    }
    
    /**
     * @param string $value
     * @return void
     */
    public function setProductId(string $value): void
    {
        $this->productId = $value;
    }
}
