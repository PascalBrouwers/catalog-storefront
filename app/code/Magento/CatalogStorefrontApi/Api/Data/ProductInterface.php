<?php
# Generated by the Magento PHP proto generator.  DO NOT EDIT!

/**
 * Copyright © Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

declare(strict_types=1);

namespace Magento\CatalogStorefrontApi\Api\Data;

interface ProductInterface
{

        /**
     * @return string
     */
    public function getEntityId(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setEntityId(string $value): void;

    /**
     * @return string
     */
    public function getAttributeSetId(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setAttributeSetId(string $value): void;

    /**
     * @return bool
     */
    public function getHasOptions(): bool;
    
    /**
     * @param bool $value
     * @return void
     */
    public function setHasOptions(bool $value): void;

    /**
     * @return string
     */
    public function getId(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setId(string $value): void;

    /**
     * @return string
     */
    public function getSku(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setSku(string $value): void;

    /**
     * @return string
     */
    public function getTypeId(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setTypeId(string $value): void;

    /**
     * @return string
     */
    public function getStatus(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setStatus(string $value): void;

    /**
     * @return string
     */
    public function getStockStatus(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setStockStatus(string $value): void;

    /**
     * @return string
     */
    public function getName(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setName(string $value): void;

    /**
     * @return string
     */
    public function getDescription(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setDescription(string $value): void;

    /**
     * @return string
     */
    public function getShortDescription(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setShortDescription(string $value): void;

    /**
     * @return string
     */
    public function getUrlKey(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setUrlKey(string $value): void;

    /**
     * @return string
     */
    public function getMetaDescription(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setMetaDescription(string $value): void;

    /**
     * @return string
     */
    public function getMetaKeyword(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setMetaKeyword(string $value): void;

    /**
     * @return string
     */
    public function getMetaTitle(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setMetaTitle(string $value): void;

    /**
     * @return string
     */
    public function getTaxClassId(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setTaxClassId(string $value): void;

    /**
     * @return float
     */
    public function getWeight(): float;
    
    /**
     * @param float $value
     * @return void
     */
    public function setWeight(float $value): void;

    /**
     * @return \Magento\CatalogStorefrontApi\Api\Data\ImageInterface|null
     */
    public function getImage(): ?\Magento\CatalogStorefrontApi\Api\Data\ImageInterface;
    
    /**
     * @param \Magento\CatalogStorefrontApi\Api\Data\ImageInterface $value
     * @return void
     */
    public function setImage(\Magento\CatalogStorefrontApi\Api\Data\ImageInterface $value): void;

    /**
     * @return \Magento\CatalogStorefrontApi\Api\Data\ImageInterface|null
     */
    public function getSmallImage(): ?\Magento\CatalogStorefrontApi\Api\Data\ImageInterface;
    
    /**
     * @param \Magento\CatalogStorefrontApi\Api\Data\ImageInterface $value
     * @return void
     */
    public function setSmallImage(\Magento\CatalogStorefrontApi\Api\Data\ImageInterface $value): void;

    /**
     * @return \Magento\CatalogStorefrontApi\Api\Data\ImageInterface|null
     */
    public function getThumbnail(): ?\Magento\CatalogStorefrontApi\Api\Data\ImageInterface;
    
    /**
     * @param \Magento\CatalogStorefrontApi\Api\Data\ImageInterface $value
     * @return void
     */
    public function setThumbnail(\Magento\CatalogStorefrontApi\Api\Data\ImageInterface $value): void;

    /**
     * @return string
     */
    public function getVisibility(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setVisibility(string $value): void;
}
