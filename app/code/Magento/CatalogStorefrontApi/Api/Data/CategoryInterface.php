<?php
# Generated by the Magento PHP proto generator.  DO NOT EDIT!

/**
 * Copyright © Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

declare(strict_types=1);

namespace Magento\CatalogStorefrontApi\Api\Data;

interface CategoryInterface
{

        /**
     * @return string
     */
    public function getId(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setId(string $value): void;

    /**
     * @return string
     */
    public function getPath(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setPath(string $value): void;

    /**
     * @return int
     */
    public function getPosition(): int;
    
    /**
     * @param int $value
     * @return void
     */
    public function setPosition(int $value): void;

    /**
     * @return int
     */
    public function getLevel(): int;
    
    /**
     * @param int $value
     * @return void
     */
    public function setLevel(int $value): void;

    /**
     * @return int
     */
    public function getChildrenCount(): int;
    
    /**
     * @param int $value
     * @return void
     */
    public function setChildrenCount(int $value): void;

    /**
     * @return string
     */
    public function getName(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setName(string $value): void;

    /**
     * @return string
     */
    public function getDisplayMode(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setDisplayMode(string $value): void;

    /**
     * @return string
     */
    public function getDefaultSortBy(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setDefaultSortBy(string $value): void;

    /**
     * @return string
     */
    public function getUrlKey(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setUrlKey(string $value): void;

    /**
     * @return string
     */
    public function getUrlPath(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setUrlPath(string $value): void;

    /**
     * @return bool
     */
    public function getIsActive(): bool;
    
    /**
     * @param bool $value
     * @return void
     */
    public function setIsActive(bool $value): void;

    /**
     * @return bool
     */
    public function getIsAnchor(): bool;
    
    /**
     * @param bool $value
     * @return void
     */
    public function setIsAnchor(bool $value): void;

    /**
     * @return bool
     */
    public function getIncludeInMenu(): bool;
    
    /**
     * @param bool $value
     * @return void
     */
    public function setIncludeInMenu(bool $value): void;

    /**
     * @return string[]
     */
    public function getAvailableSortBy(): array;
    
    /**
     * @param string[] $value
     * @return void
     */
    public function setAvailableSortBy(array $value): void;

    /**
     * @return \Magento\CatalogStorefrontApi\Api\Data\BreadcrumbInterface[]
     */
    public function getBreadcrumbs(): array;
    
    /**
     * @param \Magento\CatalogStorefrontApi\Api\Data\BreadcrumbInterface[] $value
     * @return void
     */
    public function setBreadcrumbs(array $value): void;

    /**
     * @return string
     */
    public function getDescription(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setDescription(string $value): void;

    /**
     * @return string
     */
    public function getCanonicalUrl(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setCanonicalUrl(string $value): void;

    /**
     * @return int
     */
    public function getProductCount(): int;
    
    /**
     * @param int $value
     * @return void
     */
    public function setProductCount(int $value): void;

    /**
     * @return string[]
     */
    public function getChildren(): array;
    
    /**
     * @param string[] $value
     * @return void
     */
    public function setChildren(array $value): void;

    /**
     * @return string
     */
    public function getImage(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setImage(string $value): void;

    /**
     * @return string
     */
    public function getParentId(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setParentId(string $value): void;

    /**
     * @return \Magento\CatalogStorefrontApi\Api\Data\DynamicAttributeValueInterface[]
     */
    public function getDynamicAttributes(): array;
    
    /**
     * @param \Magento\CatalogStorefrontApi\Api\Data\DynamicAttributeValueInterface[] $value
     * @return void
     */
    public function setDynamicAttributes(array $value): void;
}
