<?php
# Generated by the Magento PHP proto generator.  DO NOT EDIT!

/**
 * Copyright © Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

declare(strict_types=1);

namespace Magento\CatalogStorefrontApi\Api\Data;

interface VariantInterface
{

        /**
     * @return string
     */
    public function getId(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setId(string $value): void;

    /**
     * @return string
     */
    public function getSku(): string;
    
    /**
     * @param string $value
     * @return void
     */
    public function setSku(string $value): void;

    /**
     * @return \Magento\CatalogStorefrontApi\Api\Data\PriceInterface|null
     */
    public function getMinimumPrice(): ?\Magento\CatalogStorefrontApi\Api\Data\PriceInterface;
    
    /**
     * @param \Magento\CatalogStorefrontApi\Api\Data\PriceInterface $value
     * @return void
     */
    public function setMinimumPrice(\Magento\CatalogStorefrontApi\Api\Data\PriceInterface $value): void;

    /**
     * @return bool
     */
    public function getBuyable(): bool;
    
    /**
     * @param bool $value
     * @return void
     */
    public function setBuyable(bool $value): void;

    /**
     * @return bool
     */
    public function getInStock(): bool;
    
    /**
     * @param bool $value
     * @return void
     */
    public function setInStock(bool $value): void;

    /**
     * @return bool
     */
    public function getLowStock(): bool;
    
    /**
     * @param bool $value
     * @return void
     */
    public function setLowStock(bool $value): void;

    /**
     * @return \Magento\CatalogStorefrontApi\Api\Data\SingleValueAttributeInterface[]
     */
    public function getSelections(): array;
    
    /**
     * @param \Magento\CatalogStorefrontApi\Api\Data\SingleValueAttributeInterface[] $value
     * @return void
     */
    public function setSelections(array $value): void;
}
